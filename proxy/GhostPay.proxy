// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

import "./GhostPay.sol";

contract GhostPayProxy {
    GhostPay private ghostPay;

    constructor(GhostPay _ghostPay) {
        ghostPay = _ghostPay;
    }

    function subscribe(uint _packageId) public {
        ghostPay.subscribe(_packageId);
    }

    function viewIsSubscribed(address _user, uint _packageId) public view returns(bool) {
        return ghostPay.viewIsSubscribed(_user, _packageId);
    }

    function checkBalance(address _user) public view returns(uint) {
        return ghostPay.checkBalance(_user);
    }
    function updateSubscriptionEndTime(uint _packageId, address _user, uint _endTime) public {
            require(msg.sender == address(ghostPay), "Only GhostPay contract can call this function");
            ghostPay.updateSubscriptionEndTime(_packageId, _user, _endTime);
    }

}
